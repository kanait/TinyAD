/*
 * This file is part of TinyAD and released under the MIT license.
 * Author: Patrick Schmidt
 */
#include <Eigen/Core>

/**
 * Triangle mesh in the plane with 6 vertices and 4 faces.
 * Init stretched version.
 * Position constraints at two vertices, that require 90° ccw rotation.
 */
template <typename PassiveT>
void planar_test_mesh(
        Eigen::MatrixX<PassiveT>& _V_rest,
        Eigen::MatrixX<PassiveT>& _V_init,
        Eigen::MatrixXi& _F,
        std::vector<Eigen::Index>& _b,
        std::vector<Eigen::Vector2<PassiveT>>& _bc)
{
    _V_rest = Eigen::MatrixX<PassiveT> (6, 2);
    _V_rest << 0.0, 0.0,
          1.0, 0.0,
          0.0, 1.0,
          1.0, 1.0,
          0.0, 2.0,
          1.0, 2.0;

    // Init stretched version
    _V_init = _V_rest;
    _V_init.col(0) *= 0.5;
    _V_init.col(1) *= 0.25;

    _F = Eigen::MatrixXi(4, 3);
    _F << 0, 1, 2,
          1, 3, 2,
          2, 3, 5,
          2, 5, 4;

    // Add position constraints at two vertices, that require 90° ccw rotation.
    _b = { 0, 4 };
    _bc = { { 0.0, 0.0 }, { -2.0, 0.0 } };
}

template <typename PassiveT>
void bunny_disk_mesh(
    Eigen::MatrixX<PassiveT>& _V,
    Eigen::MatrixXi& _F)
{
      _V = Eigen::MatrixX<PassiveT>(46, 3);
      _V << 0.014693, 0.034859, -0.017492, 
            -0.036904, 0.127238, -0.005124, 
            -0.074639, 0.176419, -0.049740, 
            0.051019, 0.069193, 0.022474, 
            -0.004906, 0.048737, 0.054009, 
            0.032741, 0.049282, 0.035893, 
            0.015155, 0.085233, 0.056121, 
            -0.076828, 0.104784, 0.037908, 
            -0.065012, 0.154134, 0.003927, 
            0.006688, 0.121734, 0.037576, 
            -0.021675, 0.089240, 0.053983, 
            -0.067227, 0.077131, 0.042467, 
            0.009475, 0.134593, 0.015024, 
            -0.079380, 0.136588, 0.051328, 
            0.038698, 0.078901, -0.015798, 
            -0.063620, 0.162594, -0.056235, 
            0.027464, 0.116221, -0.009778, 
            -0.034912, 0.172602, -0.001215, 
            -0.021075, 0.162288, -0.009884, 
            -0.021729, 0.041594, -0.027408, 
            0.028948, 0.033317, 0.010711, 
            -0.037600, 0.094847, -0.024914, 
            0.016440, 0.054445, -0.029721, 
            -0.091845, 0.116681, 0.044212, 
            0.062414, 0.048888, 0.006749, 
            -0.060028, 0.136585, -0.004227, 
            -0.059451, 0.154713, 0.030062, 
            -0.088030, 0.152777, 0.021302, 
            -0.032821, 0.052454, 0.038265, 
            -0.091845, 0.091069, 0.012848, 
            -0.074725, 0.083133, -0.016780, 
            -0.091826, 0.116716, 0.004118, 
            0.047464, 0.082514, 0.009797, 
            -0.049998, 0.141248, 0.012185, 
            -0.041535, 0.152417, -0.006075, 
            -0.016272, 0.087044, -0.041215, 
            -0.035222, 0.055073, -0.011049, 
            -0.058118, 0.051838, 0.014853, 
            0.002913, 0.118006, -0.015443, 
            -0.077730, 0.150676, -0.003536, 
            -0.061400, 0.120111, -0.011313, 
            0.038585, 0.105182, 0.030786, 
            -0.036696, 0.101966, 0.042601, 
            -0.063304, 0.115138, 0.047098, 
            0.012157, 0.036657, 0.040296, 
            -0.013331, 0.182631, -0.026955;
      
      _F = Eigen::MatrixXi(82, 3);
      _F << 11, 28, 42, 
            11, 37, 28, 
            45, 8, 17, 
            14, 24, 20, 
            14, 20, 0, 
            19, 22, 0, 
            34, 18, 33, 
            10, 28, 4, 
            10, 42, 28, 
            1, 12, 38, 
            33, 1, 25, 
            33, 43, 1, 
            43, 42, 1, 
            1, 42, 9, 
            1, 9, 12, 
            11, 29, 37, 
            11, 7, 29, 
            26, 43, 33, 
            2, 8, 15, 
            8, 2, 39, 
            26, 13, 43, 
            3, 24, 32, 
            3, 5, 24, 
            19, 36, 21, 
            19, 21, 35, 
            1, 38, 21, 
            4, 44, 5, 
            4, 5, 6, 
            5, 3, 6, 
            6, 3, 41, 
            41, 9, 6, 
            43, 7, 42, 
            42, 7, 11, 
            43, 23, 7, 
            43, 13, 23, 
            14, 0, 22, 
            22, 35, 14, 
            14, 35, 38, 
            14, 38, 16, 
            8, 25, 15, 
            7, 31, 29, 
            31, 7, 23, 
            31, 39, 40, 
            23, 27, 31, 
            31, 27, 39, 
            8, 45, 34, 
            8, 34, 25, 
            25, 40, 39, 
            12, 9, 41, 
            9, 10, 6, 
            9, 42, 10, 
            6, 10, 4, 
            33, 17, 26, 
            13, 26, 27, 
            30, 40, 21, 
            32, 41, 3, 
            41, 16, 12, 
            24, 14, 32, 
            14, 16, 32, 
            32, 16, 41, 
            16, 38, 12, 
            27, 8, 39, 
            18, 45, 17, 
            17, 33, 18, 
            35, 21, 38, 
            19, 35, 22, 
            17, 8, 26, 
            33, 25, 34, 
            2, 15, 39, 
            15, 25, 39, 
            20, 24, 5, 
            30, 37, 29, 
            30, 29, 31, 
            30, 31, 40, 
            30, 36, 37, 
            36, 30, 21, 
            26, 8, 27, 
            1, 21, 40, 
            1, 40, 25, 
            23, 13, 27, 
            44, 20, 5, 
            45, 18, 34;
}

template <typename PassiveT>
void bunny_closed_mesh(
      Eigen::MatrixX<PassiveT>& _V,
      Eigen::MatrixXi& _F)
{
      _V = Eigen::MatrixX<PassiveT>(52, 3);
      _V << 0.014693, 0.034859, -0.017492, 
            -0.036904, 0.127238, -0.005124, 
            -0.074639, 0.176419, -0.049740, 
            -0.042872, 0.034860, -0.029119, 
            0.051019, 0.069193, 0.022474, 
            -0.004906, 0.048737, 0.054009, 
            0.032741, 0.049282, 0.035893, 
            0.015155, 0.085233, 0.056121, 
            -0.076828, 0.104784, 0.037908, 
            -0.065012, 0.154134, 0.003927, 
            0.006688, 0.121734, 0.037576, 
            -0.021675, 0.089240, 0.053983, 
            -0.067227, 0.077131, 0.042467, 
            0.009475, 0.134593, 0.015024, 
            -0.079380, 0.136588, 0.051328, 
            0.038698, 0.078901, -0.015798, 
            -0.063620, 0.162594, -0.056235, 
            0.027464, 0.116221, -0.009778, 
            -0.034912, 0.172602, -0.001215, 
            -0.021075, 0.162288, -0.009884, 
            -0.021729, 0.041594, -0.027408, 
            0.028948, 0.033317, 0.010711, 
            -0.037600, 0.094847, -0.024914, 
            0.016440, 0.054445, -0.029721, 
            -0.091845, 0.116681, 0.044212, 
            0.062414, 0.048888, 0.006749, 
            -0.060028, 0.136585, -0.004227, 
            -0.059451, 0.154713, 0.030062, 
            -0.088030, 0.152777, 0.021302, 
            -0.032821, 0.052454, 0.038265, 
            -0.091845, 0.091069, 0.012848, 
            -0.074725, 0.083133, -0.016780, 
            -0.091826, 0.116716, 0.004118, 
            0.047464, 0.082514, 0.009797, 
            -0.049998, 0.141248, 0.012185, 
            -0.041535, 0.152417, -0.006075, 
            -0.016272, 0.087044, -0.041215, 
            -0.035222, 0.055073, -0.011049, 
            -0.058118, 0.051838, 0.014853, 
            0.002913, 0.118006, -0.015443, 
            -0.041425, 0.038204, -0.016265, 
            -0.077730, 0.150676, -0.003536, 
            -0.061400, 0.120111, -0.011313, 
            0.038585, 0.105182, 0.030786, 
            -0.036696, 0.101966, 0.042601, 
            -0.063921, 0.040003, 0.036430, 
            -0.020979, 0.037298, 0.029990, 
            -0.028962, 0.037050, 0.052674, 
            -0.063304, 0.115138, 0.047098, 
            0.012157, 0.036657, 0.040296, 
            -0.069366, 0.033253, -0.005216, 
            -0.013331, 0.182631, -0.026955;

      _F = Eigen::MatrixX<int>(100, 3);
      _F << 12, 29, 44, 
            12, 38, 29, 
            51, 9, 18, 
            15, 25, 21, 
            15, 21, 0, 
            20, 23, 0, 
            0, 21, 46, 
            0, 46, 40, 
            0, 40, 20, 
            20, 40, 3, 
            35, 19, 34, 
            11, 29, 5, 
            11, 44, 29, 
            49, 47, 46, 
            1, 13, 39, 
            34, 1, 26, 
            34, 48, 1, 
            48, 44, 1, 
            1, 44, 10, 
            1, 10, 13, 
            12, 30, 38, 
            12, 8, 30, 
            27, 48, 34, 
            2, 9, 16, 
            9, 2, 41, 
            27, 14, 48, 
            5, 29, 47, 
            3, 40, 37, 
            4, 25, 33, 
            4, 6, 25, 
            46, 29, 45, 
            20, 37, 22, 
            20, 22, 36, 
            3, 37, 20, 
            1, 39, 22, 
            5, 49, 6, 
            5, 6, 7, 
            6, 4, 7, 
            7, 4, 43, 
            43, 10, 7, 
            48, 8, 44, 
            44, 8, 12, 
            48, 24, 8, 
            48, 14, 24, 
            15, 0, 23, 
            23, 36, 15, 
            15, 36, 39, 
            15, 39, 17, 
            9, 26, 16, 
            46, 47, 29, 
            46, 50, 40, 
            8, 32, 30, 
            32, 8, 24, 
            32, 41, 42, 
            24, 28, 32, 
            32, 28, 41, 
            9, 51, 35, 
            9, 35, 26, 
            26, 42, 41, 
            13, 10, 43, 
            10, 11, 7, 
            10, 44, 11, 
            7, 11, 5, 
            34, 18, 27, 
            14, 27, 28, 
            38, 45, 29, 
            31, 42, 22, 
            33, 43, 4, 
            43, 17, 13, 
            25, 15, 33, 
            15, 17, 33, 
            33, 17, 43, 
            17, 39, 13, 
            38, 50, 45, 
            28, 9, 41, 
            19, 51, 18, 
            18, 34, 19, 
            36, 22, 39, 
            20, 36, 23, 
            18, 9, 27, 
            34, 26, 35, 
            2, 16, 41, 
            16, 26, 41, 
            21, 25, 6, 
            31, 38, 30, 
            31, 30, 32, 
            31, 32, 42, 
            31, 37, 38, 
            37, 31, 22, 
            27, 9, 28, 
            40, 38, 37, 
            1, 22, 42, 
            1, 42, 26, 
            24, 14, 28, 
            49, 21, 6, 
            49, 5, 47, 
            40, 50, 38, 
            51, 19, 35, 
            21, 49, 46, 
            46, 45, 50;
}